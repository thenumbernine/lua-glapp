#!/usr/bin/env luajit
local cmdline = require 'ext.cmdline'(...)
local getTime = require 'ext.timer'.getTime
local sdl = require 'sdl.setup'(cmdline.sdl)
local gl = require 'gl.setup'(cmdline.gl)
local ffi = require 'ffi'

local Test = require 'glapp.orbit'()
Test.viewUseGLMatrixMode = true
Test.title = "Spinning Triangle"

function Test:initGL()
	print('SDL_GetVersion:', self.sdlGetVersion())
end

function Test:update()
	Test.super.update(self)

	gl.glClearColor(0, 0, 0, 0)
	gl.glClear(gl.GL_COLOR_BUFFER_BIT)

	local t = getTime() % 360
	gl.glRotatef(t * 30, 0, 1, 0)

	gl.glBegin(gl.GL_TRIANGLES)
	gl.glColor3f(1, 0, 0)
	gl.glVertex3f(-5, -4, 0)
	gl.glColor3f(0, 1, 0)
	gl.glVertex3f(5, -4, 0)
	gl.glColor3f(0, 0, 1)
	gl.glVertex3f(0, 6, 0)
	gl.glEnd()
end

local string = require 'ext.string'
-- TODO this is SDL2-specific
-- TODO add SDL3
local eventNames = string.split(string.trim[[
SDL_EVENT_FIRST
SDL_EVENT_QUIT
SDL_EVENT_TERMINATING
SDL_EVENT_LOW_MEMORY
SDL_EVENT_WILL_ENTER_BACKGROUND
SDL_EVENT_DID_ENTER_BACKGROUND
SDL_EVENT_WILL_ENTER_FOREGROUND
SDL_EVENT_DID_ENTER_FOREGROUND
SDL_EVENT_WINDOW_SHOWN
SDL_EVENT_WINDOW_HIDDEN
SDL_EVENT_WINDOW_EXPOSED
SDL_EVENT_WINDOW_MOVED
SDL_EVENT_WINDOW_RESIZED
SDL_EVENT_WINDOW_PIXEL_SIZE_CHANGED
SDL_EVENT_WINDOW_MINIMIZED
SDL_EVENT_WINDOW_MAXIMIZED
SDL_EVENT_WINDOW_RESTORED
SDL_EVENT_WINDOW_MOUSE_ENTER
SDL_EVENT_WINDOW_MOUSE_LEAVE
SDL_EVENT_WINDOW_FOCUS_GAINED
SDL_EVENT_WINDOW_FOCUS_LOST
SDL_EVENT_WINDOW_CLOSE_REQUESTED
SDL_EVENT_KEY_DOWN
SDL_EVENT_KEY_UP
SDL_EVENT_TEXT_EDITING
SDL_EVENT_TEXT_INPUT
SDL_EVENT_KEYMAP_CHANGED
SDL_EVENT_MOUSE_MOTION
SDL_EVENT_MOUSE_BUTTON_DOWN
SDL_EVENT_MOUSE_BUTTON_UP
SDL_EVENT_MOUSE_WHEEL
SDL_EVENT_JOYSTICK_AXIS_MOTION
SDL_EVENT_JOYSTICK_BALL_MOTION
SDL_EVENT_JOYSTICK_HAT_MOTION
SDL_EVENT_JOYSTICK_BUTTON_DOWN
SDL_EVENT_JOYSTICK_BUTTON_UP
SDL_EVENT_JOYSTICK_ADDED
SDL_EVENT_JOYSTICK_REMOVED
SDL_EVENT_GAMEPAD_AXIS_MOTION
SDL_EVENT_GAMEPAD_BUTTON_DOWN
SDL_EVENT_GAMEPAD_BUTTON_UP
SDL_EVENT_GAMEPAD_ADDED
SDL_EVENT_GAMEPAD_REMOVED
SDL_EVENT_GAMEPAD_REMAPPED
SDL_EVENT_FINGER_DOWN
SDL_EVENT_FINGER_UP
SDL_EVENT_FINGER_MOTION
SDL_EVENT_CLIPBOARD_UPDATE
SDL_EVENT_DROP_FILE
SDL_EVENT_DROP_TEXT
SDL_EVENT_AUDIO_DEVICE_ADDED
SDL_EVENT_AUDIO_DEVICE_REMOVED
SDL_EVENT_RENDER_TARGETS_RESET
SDL_EVENT_RENDER_DEVICE_RESET
SDL_EVENT_USER
SDL_EVENT_LAST
]], '\n'):mapi(string.trim):mapi(function(w)
	return w, ffi.C[w]
end):setmetatable(nil)

local function nameFor(x)
	return tostring(eventNames[x] or x)
end

function Test:event(e)
	io.write(nameFor(e[0].type))
	print()
end

return Test():run()
